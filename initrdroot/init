#!/bin/ash

mount -t proc none /proc
mount -t sysfs none /sys

mount -nvt tmpfs none /dev
mknod -m 600 /dev/console c 5 1
mknod -m 666 /dev/null c 1 3
mknod -m 666 /dev/tty c 5 0
mknod -m 666 /dev/tty0 c 4 0
mknod -m 666 /dev/tty1 c 4 1
mknod -m 666 /dev/tty2 c 4 2

# This fixes kernel output to console
echo "3	4	1	3" > /proc/sys/kernel/printk

# Create HDD/CD-ROM devices from dmesg
harddrives=$(dmesg | grep sd.\: | sed 's/\[............\]  sd.: //'  -)
for hdd in $harddrives; do
	if [ $hdd == "sda1" ]; then
		# TODO optimize me (calculate node from last char of $hdd)
		mknod /dev/sda b 8 0
		mknod /dev/sda1 b 8 1
	fi
	if [ $hdd == "sda2" ]; then
		mknod /dev/sda2 b 8 2
	fi
	if [ $hdd == "sda3" ]; then
		mknod /dev/sda3 b 8 3
	fi
	if [ $hdd == "sdb1" ]; then
		mknod /dev/sdb b 8 16
		mknod /dev/sdb1 b 8 17
	fi
	if [ $hdd == "sdb2" ]; then
		mknod /dev/sdb2 b 8 18
	fi
	if [ $hdd == "sdb3" ]; then
		mknod /dev/sdb3 b 8 19
	fi
done
# POC
#for hdd in $harddrives; do
#	hddchar=$(echo $hdd | cut 3-3)
#	hddnuma=$(echo $hdd | cut 4-4)
#	hddnumb=$hddnuma
#	if [ $hddchar == "b" ]; then
#		hddnumb=$hddnuma + 16
#	fi
#	echo "sd $hddchar $hddnuma - $hddnumb"
#	mknod /dev/sd$hddchar$hddnuma b 8 $hddnumb
#done

cdroms=$(dmesg | grep "\[sr.]" | sed 's/\[............\] sr .:.:.:.: \[//' - | cut -c 3-3)
for cdrom in $cdroms; do
	mknod /dev/sr$cdrom b 11 $cdrom
done

# Run user scripts at startup from /etc/scripts
scripts=$(ls /etc/scripts)
for script in $scripts; do
	sh /etc/scripts/$script
done

echo "" >> /user/welcome.txt
echo "	Welcome in VimOS!" >> /user/welcome.txt
echo "" >> /user/welcome.txt
busybox free -m >> /user/welcome.txt
echo "" >> /user/welcome.txt
busybox uname -a >> /user/welcome.txt
echo "" >> /user/welcome.txt
busybox mount >> /user/welcome.txt

openvt -c 2 nvim /user/welcome.txt
chvt 2
sh
